version: 2.1
jobs:
  rspec:
    working_directory: ~/umbrellanotice
    docker:
      - image: circleci/ruby
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup environment variable
          command: |
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV
      - run:
          name: Start containers
          command: |
            set -x
            docker-compose up
      - run:
          name: Run rspec
          command: docker-compose exec umbrellanotice rspec
  rubocop:
    working_directory: ~/umbrellanotice
    docker:
      - image: circleci/ruby:2.5.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

orbs:
  aws-ecr: circleci/aws-ecr@6.8.2
  aws-ecs: circleci/aws-ecs@1.1.0

workflows:
  version: 2.1
  test_and_deploy:
    jobs:
      - rspec
      - rubocop
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          context: myContext
          create-repo: true
          dockerfile: myDockerfile
          path: pathToMyDockerfile
          profile-name: myProfileName
          region: AWS_REGION_ENV_VAR_NAME
          repo: myECRRepository
          tag: 'latest,myECRRepoTag'